<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Стиль для окна (Window) -->
    <Style x:Key="TitleStyle" TargetType="Window">
        <Setter Property="Background" Value="#3E2723"/>
        <!-- Кофейный цвет -->
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Стиль для сетки (Grid) -->
    <Style x:Key="GridStyle"  TargetType="Grid">
        <Setter Property="Background" Value="#000000"/>
        <!-- Черный цвет -->
    </Style>

    <!-- Стиль для текстового блока (TextBlock) -->
    <Style x:Key="TextBlockStyle"  TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#3E2723"/>
        <!-- Кофейный цвет -->
    </Style>

    <!-- Стиль для текстового поля (TextBox) -->
    <Style x:Key="TextBoxStyle"  TargetType="TextBox">
        <Setter Property="Background" Value="#4E342E"/>
        <!-- Темно-кофейный цвет -->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#000000"/>
        <!-- Черный цвет -->
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="ButtonStyle"  TargetType="Button">
        <Setter Property="Background" Value="#3E2723"/>
        <!-- Кофейный цвет -->
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderBrush" Value="#000000"/>
        <!-- Черный цвет -->
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <Style x:Key="IconStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Image Source="C:\Users\Memodel\Downloads\WPFSQLL (2)\WPFSQLL\WPFSQLL\Source\blackgear.gif" Width="40" Height="36" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconStyle1" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Image Source="C:\Users\Memodel\Downloads\WPFSQLL (2)\WPFSQLL\WPFSQLL\Source\free-icon-back-black-square-interface-button-symbol-54379.png" Width="40" Height="36" Stretch="UniformToFill" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для ListView -->
    <Style x:Key="ListViewStyle" TargetType="ListView">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#000000"/>
        <!-- Черный цвет -->
        <Setter Property="BorderBrush" Value="#4E342E"/>
        <!-- Темно-кофейный цвет -->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>

        <!-- Применяем ControlTemplate для изменения внешнего вида -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}">
                        <ScrollViewer>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Применяем стиль для GridView -->
        <Setter Property="View">
            <Setter.Value>
                <GridView>
                    <GridViewColumn Header="Column1" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <!-- Здесь определяете как будут выглядеть ячейки -->
                                <TextBlock Text="{Binding Property1}" Foreground="White"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!-- Определите другие столбцы по аналогии -->
                    <GridViewColumn Header="Column2" Width="150">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Property2}" Foreground="White"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </Setter.Value>
        </Setter>
        <!-- Свойства выделения -->
        <Style.Resources>
            <!-- Фон при выделении -->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#795548"/>
            <!-- Темно-кофейный цвет -->
            <!-- Фон выделения, когда окно не активно -->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#795548"/>
            <!-- Темно-кофейный цвет -->
        </Style.Resources>
    </Style>

    <!-- Стиль для содержимого ComboBox -->
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#000000"/>
        <!-- Черный цвет -->
        <Setter Property="BorderBrush" Value="#4E342E"/>
        <!-- Темно-кофейный цвет -->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <!-- Пример анимации при наведении -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#3E2723"/>
                <!-- Кофейный цвет -->
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="ComboBoxContentBorder" Color="White"/>
    <SolidColorBrush x:Key="ComboBoxContentBackground" Color="#000000"/>
    <!-- Черный цвет -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Border x:Name="ToggleButtonBorder" 
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="2">
                <!-- Ваш визуальный элемент для кнопки, например, TextBlock или Image -->
                <TextBlock Text="▼" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,5,0"/>
            </Border>
        </Grid>
    </ControlTemplate>
    <!-- Стиль для ComboBox -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#3E2723"/>
        <!-- Кофейный цвет -->
        <Setter Property="BorderBrush" Value="#4E342E"/>
        <!-- Темно-кофейный цвет -->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
        <!-- Используем стиль для содержимого -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                  Template="{StaticResource ComboBoxToggleButton}"
                                  Grid.Column="2"
                                  Focusable="false"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"/>
                        <ContentPresenter x:Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="3,3,23,3"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                             Style="{x:Null}"
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center"
                             Focusable="True"
                             Background="Transparent"
                             Visibility="Hidden"
                             IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    Background="{StaticResource ComboBoxContentBackground}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource ComboBoxContentBorder}"
                                    CornerRadius="2"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Добавьте другие стили по необходимости -->

</ResourceDictionary>
